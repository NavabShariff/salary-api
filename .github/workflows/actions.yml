name: Salary API Pipeline

on:
  push:
    branches: [ "main" ]

env:
  coverage_report_path: 'code-coverage.xml'

jobs:

  sonar-scan:

    runs-on: ubuntu-latest
    container:
      image: maven:3.9-eclipse-temurin-17

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Maven Build and SonarQube Scan
        uses: NavabShariff/shared-library/.github/actions/sonar-scan@main
        with:
          projectName: ${{ github.event.repository.name }}
          projectKey: ${{ github.event.repository.name }}
          sonarHostUrl: ${{ secrets.SONAR_HOST_URL }}
          sonarToken: ${{ secrets.SONAR_TOKEN }}
          # coverageReportPath: ${{ env.coverage_report_path }}

  # build:
  #   runs-on: ubuntu-latest

  #   container:
  #     image: maven:3.9-eclipse-temurin-17
    
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Build Java project
  #       run: mvn clean package -DskipTests

  #     - name: Upload Build Output
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: java-classes
  #         path: target/classes

  # sonar-analysis:
  #   runs-on: ubuntu-latest
  #   needs: build 
  #   container:
  #     image: sonarsource/sonar-scanner-cli:latest
  #     options: --user root

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Download Build Output
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: java-classes
  #         path: target/classes

  #     - name: Run Sonar Scan
  #       uses: NavabShariff/shared-library/.github/actions/sonar-scan@main
  #       with:
  #         projectName: ${{ github.event.repository.name }}
  #         projectKey: ${{ github.event.repository.name }}
  #         sonarHostUrl: ${{ secrets.SONAR_HOST_URL }}
  #         sonarToken: ${{ secrets.SONAR_TOKEN }}
